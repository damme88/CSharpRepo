<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAD73Z4B8o05K/KINQzxhjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOAAAADvdRaH73EUffOYTQbxiDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5A0AAO9wDpHuaAT673IUePOaUAbxiTcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlDQAA73EPkO5mAP/uaAT173IVdfObUQXxiTcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOUNAADvcQ+Q7mYA/+5mAP/uaAT073MVdvKM
        OSHyizch8os3IfKLNyHyizch8os3IfKLNyHyizch8os3IfKLNyHyizch8os3IfKLNyHyizch8os3IfKL
        NyHyizch8os3IfKLNyHxhzYb8o0/COAAAAD6yY4AAAAAAAAAAAAAAAAA5Q0AAO9xD5DuZgD/7mYA/+5m
        AP/uaAP372wJ4+9sCeLvbAni72wJ4u9sCeLvbAni72wJ4u9sCeLvbAni72wJ4u9sCeLvbAni72wJ4u9s
        CeLvbAni72wJ4u9sCeLvbAni72wJ4u5qCdzvbAu273UYU/KQRQXxhjQAAAAAAAAAAADlDQAA73EPkO5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uaATy73ETbvnapgHykUIAAAAAAOUN
        AADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uaQbl8HohMu9z
        GAAAAAAA5Q0AAO9xD5DuZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        Af/vchJ47FIAAPnQrQDlDQAA73EPkO5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+9xD5TgAAAA98GNAOUNAADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mQA/+5kAP/uZAD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/73ERmNgAAAD3vYYA5Q0AAO9xD5DuZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5qBv/xhjP/8ow9//KGNP/uagb/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/vcRGX2AAAAPe9hgDlDQAA73EPkO5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZQD/73QW//zjzv//+/j//OXR//B2Gv/uZQD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+9xEZfYAAAA972GAOUNAADvcQ+Q7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5lAP/vdRf//OnX///////969v/8HYb/+5l
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/73ERl9gAAAD3vYYA5Q0AAO9x
        D5DuZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mUA/+91F//86df///////3r
        2//wdhv/7mUA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/vcRGX2AAAAPe9
        hgDlDQAA73EPkO5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZQD/73UX//zp
        1////////evb//B2G//uZQD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+9x
        EZfYAAAA972GAOUNAADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5l
        AP/vdRf//OnX///////969v/8HYb/+5lAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/73ERl9gAAAD3vYYA5Q0AAO9xD5DuZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mUA/+91F//86df///////3r2//wdhv/7mUA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/vcRGX2AAAAPe9hgDlDQAA73EPkO5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZQD/73UX//zp1////////evb//B2G//uZQD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+9xEZfYAAAA972GAOUNAADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5lAP/vcxX/+9q+//3w5v/73ML/8HUY/+5lAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/73ERl9gAAAD3vYYA5Q0AAO9xD5DuZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5oA//wdxz/8Hsi//B4Hf/uaAT/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/vcRGX2AAAAPe9hgDlDQAA73EPkO5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5kAP/uZQD/7mQA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+9xEZfYAAAA972GAOUN
        AADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/85RL//nH
        n//zlk//7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/73ERl9gA
        AAD3vYYA5Q0AAO9xD5DuZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mUA/+9w
        Ef/84Mr///////zizf/vcRP/7mUA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/vcRGX2AAAAPe9hgDlDgAA73EPkO5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/72sJ//nKpv///fr/+c2p/+9sCv/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+9xEZfYAAAA972GAOQMAADvcQ+Q7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZQD/73MX//KNQf/vdBj/7mUA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/73ERl9kAAAD3vogA6C0AAO9yEYruZgH/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZQD/7mQA/+5lAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/vcA6L6C0AAPjImgDuZAIA73UZWu5nA/vuZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mcD/O91GF3uZAQAAAAAAPF+JwDxgiwU7mwKvu5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uawrA8IIuFfB+KAAAAAAA9rxwAO5j
        AADweRww7mwKwO5nA/zuZgH/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5m
        AP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAP/uZgD/7mYA/+5mAf/uZwP87mwJwfB5GzLuZQIA9bBgAAAA
        AAAAAAAA+cyQAO1dAADxgiwV73UZW+9yE4zvcROV73ETle9xE5XvcROV73ETle9xE5XvcROV73ETle9x
        E5XvcROV73ETle9xE5XvcROV73ETle9xE5XvcROV73ETle9xE5XvcROV73ITje91GV3wgCoW7V4AAPe/
        gQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAH////4////+H////g////4AAAB+AAAAHgAAAA4AAAAOAAAADgAAAA4AA
        AAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AA
        AAOAAAADgAAAA4AAAAPAAAAH4AAAD/////8=
</value>
  </data>
</root>